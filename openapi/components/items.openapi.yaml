openapi: 3.0.3
info:
  title: Items API
  version: 1.0.0

paths:
  /items:
    get:
      summary: Lister les articles
      tags: [Items]
      parameters:
        - in: query
          name: search
          schema: { type: string }
          description: Recherche par nom
        - in: query
          name: category_id
          schema: { type: integer }
          description: Filtrer par catégorie
        - in: query
          name: is_active
          schema: { type: boolean }
          description: Filtrer par statut d'activation
        - in: query
          name: with
          schema:
            type: array
            items: { type: string }
            example: ["category", "options", "ingredients"]
          description: Relations à charger
          style: form
          explode: true
        - in: query
          name: per_page
          schema: { type: integer, default: 25, minimum: 1 }
          description: Nombre d'éléments par page
      responses:
        '200':
          description: Liste paginée des articles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemPaginatedResponse'
      x-abilities:
        - items:read
    post:
      summary: Créer un article
      tags: [Items]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemCreateRequest'
      responses:
        '201':
          description: Article créé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponse'
        '422':
          description: Erreur de validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      x-abilities:
        - items:create

  /items/{item}:
    parameters:
      - in: path
        name: item
        required: true
        schema: { type: integer }
        description: ID de l'article
    get:
      summary: Obtenir un article spécifique
      tags: [Items]
      parameters:
        - in: query
          name: with
          schema:
            type: array
            items: { type: string }
            example: ["category", "options", "ingredients"]
          description: Relations à charger
          style: form
          explode: true
      responses:
        '200':
          description: Détails de l'article
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponse'
        '404':
          description: Article non trouvé
      x-abilities:
        - items:read
    put:
      summary: Mettre à jour un article
      tags: [Items]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemUpdateRequest'
      responses:
        '200':
          description: Article mis à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponse'
        '404':
          description: Article non trouvé
        '422':
          description: Erreur de validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      x-abilities:
        - items:update
    patch:
      summary: Mettre à jour partiellement un article
      tags: [Items]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemUpdateRequest'
      responses:
        '200':
          description: Article mis à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponse'
        '404':
          description: Article non trouvé
        '422':
          description: Erreur de validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      x-abilities:
        - items:update
    delete:
      summary: Supprimer un article
      tags: [Items]
      responses:
        '200':
          description: Article supprimé avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Item supprimé avec succès"
        '404':
          description: Article non trouvé
        '422':
          description: Impossible de supprimer (contraintes métier)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
      x-abilities:
        - items:delete

components:
  schemas:
    ItemCreateRequest:
      type: object
      required:
        - name
        - category_id
        - base_price_cents
      properties:
        name:
          type: string
          maxLength: 255
          example: "Cheeseburger Deluxe"
        category_id:
          type: integer
          example: 1
        tax_id:
          type: integer
          example: 1
        sku:
          type: string
          maxLength: 100
          example: "CHEESE-001"
        barcode:
          type: string
          maxLength: 255
          example: "1234567890123"
        description:
          type: string
          example: "Notre burger signature avec du fromage fondu"
        currency:
          type: string
          example: "EUR"
        base_price_cents:
          type: integer
          minimum: 0
          example: 999
        current_cost_cents:
          type: integer
          minimum: 0
          example: 450
        is_active:
          type: boolean
          default: true
        track_inventory:
          type: boolean
          default: false
        stock:
          type: integer
          minimum: 0
          example: 50
        loyalty_eligible:
          type: boolean
          default: false
        age_restriction:
          type: integer
          minimum: 0
          example: 18
        reorder_level:
          type: integer
          minimum: 0
          example: 10
        weight_grams:
          type: integer
          minimum: 0
          example: 250
        tags:
          type: array
          items:
            type: string
            maxLength: 50
          example: ["populaire", "nouveau"]
        metadata:
          type: object
          example: {"allergens": ["gluten", "dairy"]}
        options:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
                maxLength: 255
              price_cents:
                type: integer
                minimum: 0
        variants:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                maxLength: 255
              sku:
                type: string
                maxLength: 100
              price_cents:
                type: integer
                minimum: 0
              is_active:
                type: boolean
                default: true
        ingredients:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
                maxLength: 255
              is_mandatory:
                type: boolean
              is_allergen:
                type: boolean
              unit:
                type: string
                maxLength: 50
              cost_per_unit_cents:
                type: integer
                minimum: 0
        image:
          type: string
          format: byte
          description: Image de l'article en base64
        image_url:
          type: string
          format: uri
          description: URL de l'image

    ItemUpdateRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        category_id:
          type: integer
        tax_id:
          type: integer
        sku:
          type: string
          maxLength: 100
        barcode:
          type: string
          maxLength: 255
        description:
          type: string
        currency:
          type: string
        base_price_cents:
          type: integer
          minimum: 0
        current_cost_cents:
          type: integer
          minimum: 0
        is_active:
          type: boolean
        track_inventory:
          type: boolean
        stock:
          type: integer
          minimum: 0
        loyalty_eligible:
          type: boolean
        age_restriction:
          type: integer
          minimum: 0
        reorder_level:
          type: integer
          minimum: 0
        weight_grams:
          type: integer
          minimum: 0
        tags:
          type: array
          items:
            type: string
            maxLength: 50
        metadata:
          type: object
        image:
          type: string
          format: byte
          description: Image de l'article en base64
        image_url:
          type: string
          format: uri
          description: URL de l'image

    Item:
      type: object
      properties:
        id:
          type: integer
          example: 1
        store_id:
          type: integer
          example: 1
        category_id:
          type: integer
          example: 1
        tax_id:
          type: integer
          example: 1
        name:
          type: string
          example: "Cheeseburger Deluxe"
        sku:
          type: string
          example: "CHEESE-001"
        barcode:
          type: string
          example: "1234567890123"
        description:
          type: string
          example: "Notre burger signature avec du fromage fondu"
        currency:
          type: string
          example: "EUR"
        base_price_cents:
          type: integer
          example: 999
        current_cost_cents:
          type: integer
          example: 450
        is_active:
          type: boolean
          example: true
        track_inventory:
          type: boolean
          example: false
        stock:
          type: integer
          example: 50
        loyalty_eligible:
          type: boolean
          example: false
        age_restriction:
          type: integer
          example: 18
        reorder_level:
          type: integer
          example: 10
        weight_grams:
          type: integer
          example: 250
        tags:
          type: array
          items:
            type: string
          example: ["populaire", "nouveau"]
        metadata:
          type: object
          example: {"allergens": ["gluten", "dairy"]}
        created_by:
          type: integer
          example: 1
        updated_by:
          type: integer
          example: 1
        created_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        deleted_at:
          type: string
          format: date-time
          nullable: true
          example: null
        category:
          $ref: '#/components/schemas/Category'
        tax:
          $ref: '#/components/schemas/Tax'
        variants:
          type: array
          items:
            $ref: '#/components/schemas/ItemVariant'
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
        options:
          type: array
          items:
            $ref: '#/components/schemas/Option'

    ItemResponse:
      type: object
      properties:
        message:
          type: string
          example: "Item créé avec succès"
        data:
          $ref: '#/components/schemas/Item'

    ItemPaginatedResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        meta:
          type: object
          properties:
            current_page:
              type: integer
              example: 1
            per_page:
              type: integer
              example: 25
            total:
              type: integer
              example: 100
            last_page:
              type: integer
              example: 4

    ValidationError:
      type: object
      properties:
        message:
          type: string
          example: "The given data was invalid."
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string

    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string

    Tax:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        rate:
          type: number

    ItemVariant:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price_cents:
          type: integer
        sku:
          type: string
        is_active:
          type: boolean

    Ingredient:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        is_allergen:
          type: boolean
        is_mandatory:
          type: boolean

    Option:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price_cents:
          type: integer
